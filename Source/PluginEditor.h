/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#ifndef PLUGINEDITOR_H_INCLUDED
#define PLUGINEDITOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "PluginProcessor.h"
#include "GUIUtilities/CustomKnob.h"
#include "GUIUtilities/ImageAnimator.h"
#include "GUIUtilities/CustomButton.h"
#include "GUIUtilities/ImageInteractor.h"

//==============================================================================
/**
*/
class KissOfShameAudioProcessorEditor  : public AudioProcessorEditor,
                                         public Timer,
                                         public SliderListener,
                                         public Button::Listener

{
public:
    KissOfShameAudioProcessorEditor (KissOfShameAudioProcessor* ownerFilter);
    ~KissOfShameAudioProcessorEditor();
    
    void timerCallback() override;
    
    void sliderValueChanged (Slider*) override;
    
    void buttonClicked (Button* b);
    virtual void timerCallback(int timerID){};
    
    void changeListenerCallback (ChangeBroadcaster *source){};
    
    //Knobs
    ScopedPointer<CustomKnob> inputSaturationKnob;
    ScopedPointer<CustomKnob> shameKnob;
    ScopedPointer<CustomKnob> hissKnob;
    ScopedPointer<CustomKnob> blendKnob;
    ScopedPointer<CustomKnob> outputKnob;
    
    //buttons
    ScopedPointer<CustomButton> bypassButton;
    
    //labels & images
    Label inputLabel;
    Label shameLabel;
    Label hissLabel;
    Label blendLabel;
    Label outputLabel;
    Label bypassLabel;
    Label debugLabel; //Used strictly to post messages for debugging...

    
    //animation
    ScopedPointer<ImageAnimator> testAnimation;
    ScopedPointer<ImageInteractor> vuMeter;
    
    
    
    
private:
    
    Image faceImage;
    
    KissOfShameAudioProcessor* getProcessor() const
    {
        return static_cast <KissOfShameAudioProcessor*> (getAudioProcessor());
    }
    
    


    //==============================================================================
    // This is just a standard Juce paint method...
    void paint (Graphics& g);
};


#endif  // PLUGINEDITOR_H_INCLUDED
